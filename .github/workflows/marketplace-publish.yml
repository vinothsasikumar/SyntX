name: Publish Extension

on:
  push:
    tags:
      - 'v*'

jobs:
  check-branch:
    runs-on: ubuntu-latest
    outputs:
      is-main: ${{ steps.check.outputs.is-main }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check if tag is on main branch
        id: check
        run: |
          # Ensure all branches are fetched
          git fetch --all
          
          # Get the commit the tag points to
          TAG_COMMIT=$(git rev-list -n 1 ${{ github.ref_name }})
          echo "Tag commit: $TAG_COMMIT"
          
          # Check if this commit is in the main branch's history
          if git merge-base --is-ancestor $TAG_COMMIT origin/main; then
            echo "is-main=true" >> $GITHUB_OUTPUT
            echo "✅ Tag is on main branch"
          else
            echo "is-main=false" >> $GITHUB_OUTPUT
            echo "❌ Tag is NOT on main branch"
          fi

  publish-extension:
    needs: check-branch
    if: ${{ needs.check-branch.outputs.is-main == 'true' && (github.actor == 'Kraken2003' || github.actor == 'Prith870') }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js and pnpm
        uses: ./.github/actions/setup-node-pnpm
      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
      - name: Create .env file
        run: echo "POSTHOG_API_KEY=${{ secrets.POSTHOG_API_KEY }}" >> .env
      - name: Package Extension
        run: |
          current_package_version=$(node -p "require('./src/package.json').version")
          pnpm vsix
          echo "Successfully packaged syntx v${current_package_version}"
      - name: Publish Extension
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}
          OVSX_PAT: ${{ secrets.OVSX_PAT }}
        run: |
          current_package_version=$(node -p "require('./src/package.json').version")
          pnpm --filter syntx publish:marketplace
          echo "Successfully published syntx v${current_package_version} to VS Code Marketplace"
